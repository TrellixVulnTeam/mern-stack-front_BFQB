{"ast":null,"code":"import { configureStore, createSlice } from \"@reduxjs/toolkit\"; //요청데이터\n\nconst initialState = {\n  boardLoading: false,\n  boardData: null,\n  error: null,\n  token: null\n};\nconst boardSlice = createSlice({\n  name: \"boards\",\n  initialState,\n  reducers: {\n    createRequest(state, _action) {\n      state.boardLoading = true;\n      state.error = null;\n    },\n\n    createSuccess(state, action) {\n      state.boardLoading = false;\n      state.boardData = action.payload;\n    },\n\n    createFailure(state, action) {\n      state.boardLoading = false;\n      state.error = action.payload;\n    }\n\n  }\n});\nconst store = configureStore({\n  reducer: {\n    board: boardSlice.reducer\n  }\n});\nconst {\n  reducer,\n  actions\n} = boardSlice;\nexport const {\n  createRequest,\n  createSuccess,\n  createFailure\n} = actions;\nexport default reducer;","map":{"version":3,"sources":["C:/Users/seosuwan/Desktop/새 폴더/mern-stack-front/src/features/board/reducer/boardSlice.ts"],"names":["configureStore","createSlice","initialState","boardLoading","boardData","error","token","boardSlice","name","reducers","createRequest","state","_action","createSuccess","action","payload","createFailure","store","reducer","board","actions"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,WAAzB,QAA2D,kBAA3D,C,CAEA;;AA6CA,MAAMC,YAAwB,GAAG;AAC/BC,EAAAA,YAAY,EAAE,KADiB;AAE/BC,EAAAA,SAAS,EAAE,IAFoB;AAG/BC,EAAAA,KAAK,EAAE,IAHwB;AAI/BC,EAAAA,KAAK,EAAE;AAJwB,CAAjC;AAOA,MAAMC,UAAU,GAAGN,WAAW,CAAC;AAC7BO,EAAAA,IAAI,EAAE,QADuB;AAE7BN,EAAAA,YAF6B;AAG7BO,EAAAA,QAAQ,EAAE;AAERC,IAAAA,aAAa,CAACC,KAAD,EAAoBC,OAApB,EAAuD;AAClED,MAAAA,KAAK,CAACR,YAAN,GAAqB,IAArB;AACAQ,MAAAA,KAAK,CAACN,KAAN,GAAc,IAAd;AACD,KALO;;AAORQ,IAAAA,aAAa,CAACF,KAAD,EAAoBG,MAApB,EAA8D;AACzEH,MAAAA,KAAK,CAACR,YAAN,GAAqB,KAArB;AACAQ,MAAAA,KAAK,CAACP,SAAN,GAAkBU,MAAM,CAACC,OAAzB;AACD,KAVO;;AAYRC,IAAAA,aAAa,CAACL,KAAD,EAAoBG,MAApB,EAA2D;AACtEH,MAAAA,KAAK,CAACR,YAAN,GAAqB,KAArB;AACAQ,MAAAA,KAAK,CAACN,KAAN,GAAcS,MAAM,CAACC,OAArB;AACD;;AAfO;AAHmB,CAAD,CAA9B;AAwBA,MAAME,KAAK,GAAGjB,cAAc,CAAC;AAC3BkB,EAAAA,OAAO,EAAE;AACPC,IAAAA,KAAK,EAAEZ,UAAU,CAACW;AADX;AADkB,CAAD,CAA5B;AAMA,MAAM;AAAEA,EAAAA,OAAF;AAAWE,EAAAA;AAAX,IAAuBb,UAA7B;AACA,OAAO,MAAM;AACXG,EAAAA,aADW;AAEXG,EAAAA,aAFW;AAGXG,EAAAA;AAHW,IAKTI,OALG;AAMP,eAAeF,OAAf","sourcesContent":["import { configureStore, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\n//요청데이터\nexport interface BoardData {\n    email?: string;\n    title: string;\n    content: string;\n    created?: string;\n    updated?: string;\n    user?: UserData;\n    \n}\n//요청데이터\nexport interface CommentData {\n    email?: number;\n    content: string;\n    created?: string;\n    updated?: string;\n    board_id?: number;\n    user?: UserData;\n  }\n//요청데이터\nexport interface UserData {\n    email?: string;\n    password?: string;\n    username?: string;\n    created?: string;\n    updated?: string;\n  }\nexport interface CreateDataPayload{\n    email?: number;\n    title: string;\n    content: string;\n    created?: string;\n    updated?: string;\n    user?: UserData;\n}\nexport interface boardState {\n  boardLoading: boolean;\n  boardData: any;\n  error: any;\n  token: null;\n}\n// api의 param 타입\nexport interface ParamType {\n  email?: string;\n}\nconst initialState: boardState = {\n  boardLoading: false,\n  boardData: null,\n  error: null,\n  token: null\n};\n\nconst boardSlice = createSlice({\n  name: \"boards\",\n  initialState,\n  reducers: {\n\n    createRequest(state: boardState, _action: PayloadAction<BoardData>) {\n      state.boardLoading = true;\n      state.error = null;\n    },\n\n    createSuccess(state: boardState, action: PayloadAction<CreateDataPayload>) {\n      state.boardLoading = false;\n      state.boardData = action.payload;\n    },\n\n    createFailure(state: boardState, action: PayloadAction<{ error: any }>) {\n      state.boardLoading = false;\n      state.error = action.payload;\n    },\n   \n\n  },\n});\n\nconst store = configureStore({\n  reducer: {\n    board: boardSlice.reducer,\n  },\n});\nexport type RootState = ReturnType<typeof store.getState>;\nconst { reducer, actions } = boardSlice;\nexport const {\n  createRequest,\n  createSuccess,\n  createFailure\n\n} = actions;\nexport default reducer;\n\n"]},"metadata":{},"sourceType":"module"}