{"ast":null,"code":"import _toConsumableArray from\"C:/Users/bitcamp/Desktop/1228/mern-stack-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _assertThisInitialized from\"C:/Users/bitcamp/Desktop/1228/mern-stack-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _classCallCheck from\"C:/Users/bitcamp/Desktop/1228/mern-stack-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/Users/bitcamp/Desktop/1228/mern-stack-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"C:/Users/bitcamp/Desktop/1228/mern-stack-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"C:/Users/bitcamp/Desktop/1228/mern-stack-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from\"react\";import{styled}from'@mui/material/styles';import Avatar from'@mui/material/Avatar';import Icon from'@mui/material/Icon';import IconButton from'@mui/material/IconButton';import Paper from'@mui/material/Paper';import Typography from'@mui/material/Typography';import clsx from'clsx';import{useEffect,useRef,useState}from'react';import{useDispatch,useSelector}from'react-redux';import InputBase from'@mui/material/InputBase';import\"features/chatbot/style/ChatStyle.scss\";import ReactDOM from'react-dom';import chat from\"features/chatbot/images/chatbot (1).png\";import{animate}from\"framer-motion\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";export default function Chatbot(){var some=function some(){var x=document.getElementById(\"chatbot\");if(x.style.display===\"block\"){x.style.display=\"none\";}else{x.style.display=\"block\";}};function scrollToBottom(){chatRef.current.scrollTop=chatRef.current.scrollHeight;}var chatRef=useRef({});/* detect url in a message and add a link tag */function detectURL(message){var urlRegex=/(((https?:\\/\\/)|(www\\.))[^\\s]+)/g;return message.replace(urlRegex,function(urlMatch){return'<a href=\"'+urlMatch+'\">'+urlMatch+'</a>';});}/* ========== */ /* Title component */var Title=/*#__PURE__*/function(_React$Component){_inherits(Title,_React$Component);var _super=_createSuper(Title);function Title(props,context){_classCallCheck(this,Title);return _super.call(this,props,context);}_createClass(Title,[{key:\"render\",value:function render(){return/*#__PURE__*/_jsxs(\"div\",{className:\"chatApp__convTitle\",children:[this.props.owner,\"'s display\"]});}}]);return Title;}(React.Component);/* end Title component */ /* ========== */ /* ========== */ /* InputMessage component - used to type the message */var InputMessage=/*#__PURE__*/function(_React$Component2){_inherits(InputMessage,_React$Component2);var _super2=_createSuper(InputMessage);function InputMessage(props,context){var _this;_classCallCheck(this,InputMessage);_this=_super2.call(this,props,context);_this.handleSendMessage=_this.handleSendMessage.bind(_assertThisInitialized(_this));_this.handleTyping=_this.handleTyping.bind(_assertThisInitialized(_this));return _this;}_createClass(InputMessage,[{key:\"handleSendMessage\",value:function handleSendMessage(event){event.preventDefault();/* Disable sendMessage if the message is empty */if(this.messageInput.value.length>0){this.props.sendMessageLoading(this.ownerInput.value,this.ownerAvatarInput.value,this.messageInput.value);/* Reset input after send*/this.messageInput.value='';}}},{key:\"handleTyping\",value:function handleTyping(event){/* Tell users when another user has at least started to write */if(this.messageInput.value.length>0){this.props.typing(this.ownerInput.value);}else{/* When there is no more character, the user no longer writes */this.props.resetTyping(this.ownerInput.value);}}},{key:\"render\",value:function render(){var _this2=this;/* If the chatbox state is loading, loading class for display */var loadingClass=this.props.isLoading?'chatApp__convButton--loading':'';var sendButtonIcon=/*#__PURE__*/_jsx(\"i\",{className:\"material-icons\",children:\"send\"});return/*#__PURE__*/_jsxs(\"form\",{onSubmit:this.handleSendMessage,children:[/*#__PURE__*/_jsx(\"input\",{type:\"hidden\",ref:function ref(owner){return _this2.ownerInput=owner;},value:this.props.owner}),/*#__PURE__*/_jsx(\"input\",{type:\"hidden\",ref:function ref(ownerAvatar){return _this2.ownerAvatarInput=ownerAvatar;},value:this.props.ownerAvatar}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",ref:function ref(message){return _this2.messageInput=message;},className:\"chatApp__convInput\",placeholder:\"Text message\",onKeyDown:this.handleTyping,onKeyUp:this.handleTyping,tabIndex:\"0\"}),/*#__PURE__*/_jsx(\"div\",{className:'chatApp__convButton '+loadingClass,onClick:this.handleSendMessage,children:sendButtonIcon})]});}}]);return InputMessage;}(React.Component);/* end InputMessage component */ /* ========== */ /* ========== */ /* TypingIndicator component */var TypingIndicator=/*#__PURE__*/function(_React$Component3){_inherits(TypingIndicator,_React$Component3);var _super3=_createSuper(TypingIndicator);function TypingIndicator(props,context){_classCallCheck(this,TypingIndicator);return _super3.call(this,props,context);}_createClass(TypingIndicator,[{key:\"render\",value:function render(){var typersDisplay='';var countTypers=0;/* for each user writing messages in chatroom */for(var key in this.props.isTyping){/* retrieve the name if it isn't the owner of the chatbox */if(key!=this.props.owner&&this.props.isTyping[key]){typersDisplay+=', '+key;countTypers++;}}/* formatting text */typersDisplay=typersDisplay.substr(1);typersDisplay+=countTypers>1?' are ':' is ';/* if at least one other person writes */if(countTypers>0){return/*#__PURE__*/_jsxs(\"div\",{className:\"chatApp__convTyping\",children:[typersDisplay,\" writing\",/*#__PURE__*/_jsx(\"span\",{className:\"chatApp__convTypingDot\"})]});}return/*#__PURE__*/_jsx(\"div\",{className:\"chatApp__convTyping\"});}}]);return TypingIndicator;}(React.Component);/* end TypingIndicator component */ /* ========== */ /* ========== */ /* MessageList component - contains all messages */var MessageList=/*#__PURE__*/function(_React$Component4){_inherits(MessageList,_React$Component4);var _super4=_createSuper(MessageList);function MessageList(props,context){_classCallCheck(this,MessageList);return _super4.call(this,props,context);}_createClass(MessageList,[{key:\"render\",value:function render(){var _this3=this;return/*#__PURE__*/_jsx(\"div\",{className:\"chatApp__convTimeline\",children:this.props.messages.slice(0).reverse().map(function(messageItem){return/*#__PURE__*/_jsx(MessageItem,{owner:_this3.props.owner,sender:messageItem.sender,senderAvatar:messageItem.senderAvatar,message:messageItem.message},messageItem.id);})});}}]);return MessageList;}(React.Component);/* end MessageList component */ /* ========== */ /* ========== */ /* MessageItem component - composed of a message and the sender's avatar */var MessageItem=/*#__PURE__*/function(_React$Component5){_inherits(MessageItem,_React$Component5);var _super5=_createSuper(MessageItem);function MessageItem(){_classCallCheck(this,MessageItem);return _super5.apply(this,arguments);}_createClass(MessageItem,[{key:\"render\",value:function render(){/* message position formatting - right if I'm the author */var messagePosition=this.props.owner==this.props.sender?'chatApp__convMessageItem--right':'chatApp__convMessageItem--left';return/*#__PURE__*/_jsxs(\"div\",{className:\"chatApp__convMessageItem \"+messagePosition+\" clearfix\",children:[/*#__PURE__*/_jsx(\"img\",{src:this.props.senderAvatar,alt:this.props.sender,className:\"chatApp__convMessageAvatar\"}),/*#__PURE__*/_jsx(\"div\",{className:\"chatApp__convMessageValue\",dangerouslySetInnerHTML:{__html:this.props.message}})]});}}]);return MessageItem;}(React.Component);/* end MessageItem component */ /* ========== */ /* ========== */ /* ChatBox component - composed of Title, MessageList, TypingIndicator, InputMessage */var ChatBox=/*#__PURE__*/function(_React$Component6){_inherits(ChatBox,_React$Component6);var _super6=_createSuper(ChatBox);function ChatBox(props,context){var _this4;_classCallCheck(this,ChatBox);_this4=_super6.call(this,props,context);_this4.state={isLoading:false};_this4.sendMessageLoading=_this4.sendMessageLoading.bind(_assertThisInitialized(_this4));var timeout=null;return _this4;}/* catch the sendMessage signal and update the loading state then continues the sending instruction */_createClass(ChatBox,[{key:\"sendMessageLoading\",value:function sendMessageLoading(sender,senderAvatar,message){var _this5=this;this.setState({isLoading:true});this.props.sendMessage(sender,senderAvatar,message);setTimeout(function(){_this5.setState({isLoading:false});},400);}},{key:\"render\",value:function render(){return/*#__PURE__*/_jsxs(\"div\",{className:\"chatApp__conv\",children:[/*#__PURE__*/_jsx(Title,{owner:this.props.owner}),/*#__PURE__*/_jsx(MessageList,{owner:this.props.owner,messages:this.props.messages}),/*#__PURE__*/_jsxs(\"div\",{className:\"chatApp__convSendMessage clearfix\",children:[/*#__PURE__*/_jsx(TypingIndicator,{owner:this.props.owner,isTyping:this.props.isTyping}),/*#__PURE__*/_jsx(InputMessage,{isLoading:this.state.isLoading,owner:this.props.owner,ownerAvatar:this.props.ownerAvatar,sendMessage:this.props.sendMessage,sendMessageLoading:this.sendMessageLoading,typing:this.props.typing,resetTyping:this.props.resetTyping})]})]});}}]);return ChatBox;}(React.Component);/* end ChatBox component */ /* ========== */ /* ========== */ /* ChatRoom component - composed of multiple ChatBoxes */var ChatRoom=/*#__PURE__*/function(_React$Component7){_inherits(ChatRoom,_React$Component7);var _super7=_createSuper(ChatRoom);function ChatRoom(props,context){var _this6;_classCallCheck(this,ChatRoom);_this6=_super7.call(this,props,context);_this6.state={messages:[{id:1,sender:'Shun',senderAvatar:chat,message:'뭘 도와드릴까요 👋'},{id:2,sender:'Gabe',senderAvatar:'https://i.pravatar.cc/150?img=56',message:'비밀번호 변경하는 방법 알려줘'},{id:3,sender:'Shun',senderAvatar:chat,message:'넹! 어쩌고 저쩌고 지짜고 🙃'},{id:4,sender:'Gabe',senderAvatar:'https://i.pravatar.cc/150?img=56',message:'고마워 챗봇!🍻'}],isTyping:[]};_this6.sendMessage=_this6.sendMessage.bind(_assertThisInitialized(_this6));_this6.typing=_this6.typing.bind(_assertThisInitialized(_this6));_this6.resetTyping=_this6.resetTyping.bind(_assertThisInitialized(_this6));return _this6;}/* adds a new message to the chatroom */_createClass(ChatRoom,[{key:\"sendMessage\",value:function sendMessage(sender,senderAvatar,message){var _this7=this;setTimeout(function(){var messageFormat=detectURL(message);var newMessageItem={id:_this7.state.messages.length+1,sender:sender,senderAvatar:senderAvatar,message:messageFormat};_this7.setState({messages:[].concat(_toConsumableArray(_this7.state.messages),[newMessageItem])});_this7.resetTyping(sender);},400);}/* updates the writing indicator if not already displayed */},{key:\"typing\",value:function typing(writer){if(!this.state.isTyping[writer]){var stateTyping=this.state.isTyping;stateTyping[writer]=true;this.setState({isTyping:stateTyping});}}/* hide the writing indicator */},{key:\"resetTyping\",value:function resetTyping(writer){var stateTyping=this.state.isTyping;stateTyping[writer]=false;this.setState({isTyping:stateTyping});}},{key:\"render\",value:function render(){var users={};var chatBoxes=[];var messages=this.state.messages;var isTyping=this.state.isTyping;var sendMessage=this.sendMessage;var typing=this.typing;var resetTyping=this.resetTyping;/* user details - can add as many users as desired */ // users[0] = { name: 'Shun', avatar: 'https://i.pravatar.cc/150?img=32' };\nusers[1]={name:'Gabe',avatar:'https://i.pravatar.cc/150?img=56'};/* test with two other users :)\n\t\tusers[2] = { name: 'Kate', avatar: 'https://i.pravatar.cc/150?img=47' };\n\t\tusers[3] = { name: 'Patrick', avatar: 'https://i.pravatar.cc/150?img=14' };\n\t\t*/ /* creation of a chatbox for each user present in the chatroom */Object.keys(users).map(function(key){var user=users[key];chatBoxes.push(/*#__PURE__*/_jsx(ChatBox,{owner:user.name,ownerAvatar:user.avatar,sendMessage:sendMessage,typing:typing,resetTyping:resetTyping,messages:messages,isTyping:isTyping},key));});return/*#__PURE__*/_jsx(\"div\",{className:\"chatApp__room\",children:chatBoxes});}}]);return ChatRoom;}(React.Component);/* end ChatRoom component */ /* ========== */ /* render the chatroom */setTimeout(function(){ReactDOM.render(/*#__PURE__*/_jsx(ChatRoom,{}),document.getElementById(\"chatApp\"));},400);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"button\",{onClick:function onClick(){return some();},children:[\" \",/*#__PURE__*/_jsx(\"img\",{class:\"pulsate-bck\",style:{marginLeft:\"159px\",width:'30%',cursor:\"pointer\"},src:require(\"features/common/images/chatbot.png\").default})]}),/*#__PURE__*/_jsx(\"div\",{className:\"chatbotTxT\",id:\"chatbot\",style:{display:\"none\"},children:/*#__PURE__*/_jsx(\"section\",{id:\"chatApp\",class:\"chatApp\",children:/*#__PURE__*/_jsxs(\"div\",{class:\"chatApp__loaderWrapper\",children:[/*#__PURE__*/_jsx(\"div\",{class:\"chatApp__loaderText\",children:\"Loading...\"}),/*#__PURE__*/_jsx(\"div\",{class:\"chatApp__loader\"})]})})})]});}","map":null,"metadata":{},"sourceType":"module"}