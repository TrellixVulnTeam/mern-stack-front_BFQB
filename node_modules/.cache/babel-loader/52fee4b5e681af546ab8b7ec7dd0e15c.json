{"ast":null,"code":"import n, { useEffect as e, useState as o, useRef as t, useContext as a, useMemo as i } from \"react\";\nimport r from \"react-dom\";\n\nvar l = function l(n, o, t) {\n  e(function () {\n    if (n && t) {\n      var e = function e() {\n        var e = [].slice.call(arguments);\n        return void 0 === e ? t(n) : t.apply(void 0, [n].concat(e));\n      };\n\n      return kakao.maps.event.addListener(n, o, e), function () {\n        kakao.maps.event.removeListener(n, o, e);\n      };\n    }\n  }, [n, o, t]);\n},\n    s = n.createContext(void 0),\n    u = function u(a) {\n  var i = a.id,\n      r = void 0 === i ? \"kakao-map-container\" : i,\n      u = a.style,\n      c = a.children,\n      d = a.center,\n      p = a.isPanto,\n      k = void 0 !== p && p,\n      f = a.padding,\n      m = void 0 === f ? 32 : f,\n      g = a.className,\n      v = a.disableDoubleClick,\n      w = a.disableDoubleClickZoom,\n      C = a.draggable,\n      y = a.zoomable,\n      h = a.keyboardShortcuts,\n      M = a.level,\n      b = a.maxLevel,\n      O = a.minLevel,\n      I = a.mapTypeId,\n      x = a.projectionId,\n      L = a.scrollwheel,\n      z = a.tileAnimation,\n      P = a.onCreate,\n      S = a.onBoundsChanged,\n      A = a.onCenterChanged,\n      E = a.onClick,\n      W = a.onDoubleClick,\n      D = a.onDrag,\n      R = a.onDragEnd,\n      N = a.onDragStart,\n      Z = a.onIdle,\n      T = a.onMaptypeidChanged,\n      _ = a.onMouseMove,\n      j = a.onRightClick,\n      V = a.onTileLoaded,\n      F = a.onZoomChanged,\n      G = a.onZoomStart,\n      B = o(),\n      q = B[0],\n      H = B[1],\n      X = t(null);\n  return e(function () {\n    window.kakao ? X.current && kakao.maps.load(function () {\n      var n = \"lat\" in d ? new kakao.maps.LatLng(d.lat, d.lng) : new kakao.maps.Coords(d.x, d.y),\n          e = new kakao.maps.Map(X.current, {\n        center: n,\n        disableDoubleClick: v,\n        disableDoubleClickZoom: w,\n        draggable: C,\n        keyboardShortcuts: h,\n        level: M,\n        mapTypeId: I,\n        projectionId: x,\n        scrollwheel: L,\n        tileAnimation: z\n      });\n      H(e);\n    }) : console.warn(\"kakao map javascript api를 먼저 불러와야 합니다. `https://apis.map.kakao.com/web/guide`\");\n  }, [v, w, I, z]), e(function () {\n    q && P && P(q);\n  }, [q, P]), e(function () {\n    if (q) {\n      var n = q.getCenter();\n      n instanceof kakao.maps.Coords && (n = n.toLatLng());\n      var e = \"lat\" in d ? new kakao.maps.LatLng(d.lat, d.lng) : new kakao.maps.Coords(d.x, d.y);\n      e instanceof kakao.maps.LatLng && e.equals(n) || e instanceof kakao.maps.Coords && e.toLatLng().equals(n) || (k ? q.panTo(e, m) : q.setCenter(e));\n    }\n  }, [q, d.lat, d.lng, d.x, d.y]), e(function () {\n    q && void 0 !== C && q.setDraggable(C);\n  }, [q, C]), e(function () {\n    q && void 0 !== y && q.setZoomable(y);\n  }, [q, y]), e(function () {\n    q && h && \"boolean\" == typeof h && q.setKeyboardShortcuts(h);\n  }, [q, h]), e(function () {\n    q && M && q.setLevel(M);\n  }, [q, M]), e(function () {\n    q && I && q.setMapTypeId(I);\n  }, [q, I]), e(function () {\n    q && x && q.setProjectionId(x);\n  }, [q, x]), e(function () {\n    q && b && q.setMaxLevel(b);\n  }, [q, b]), e(function () {\n    q && O && q.setMinLevel(O);\n  }, [q, O]), l(q, \"bounds_changed\", S), l(q, \"center_changed\", A), l(q, \"click\", E), l(q, \"dblclick\", W), l(q, \"drag\", D), l(q, \"dragstart\", N), l(q, \"dragend\", R), l(q, \"idle\", Z), l(q, \"maptypeid_changed\", T), l(q, \"mousemove\", _), l(q, \"rightclick\", j), l(q, \"tilesloaded\", V), l(q, \"zoom_changed\", F), l(q, \"zoom_start\", G), n.createElement(n.Fragment, null, n.createElement(\"div\", {\n    id: r,\n    style: u,\n    className: g,\n    ref: X\n  }), q && n.createElement(s.Provider, {\n    value: q\n  }, c));\n},\n    c = function c(n) {\n  var e = a(s);\n  if (!e) throw new Error((n ? n + \" Component\" : \"useMap\") + \" must exist inside Map Component!\");\n  return e;\n},\n    d = function d(n) {\n  var o = n.id,\n      a = n.className,\n      l = n.style,\n      s = n.map,\n      u = n.position,\n      c = n.marker,\n      d = n.children,\n      p = n.altitude,\n      k = n.disableAutoPan,\n      f = n.range,\n      m = n.removable,\n      g = n.zIndex,\n      v = n.onCreate,\n      w = t(document.createElement(\"div\")),\n      C = i(function () {\n    var n = new kakao.maps.InfoWindow({\n      altitude: p,\n      disableAutoPan: k,\n      range: f,\n      removable: m,\n      zIndex: g,\n      content: w.current,\n      position: u\n    });\n    return w.current.style.whiteSpace = \"nowrap\", n;\n  }, [k, m]);\n  return e(function () {\n    return C.open(s, c), function () {\n      C.close();\n    };\n  }, [s, c]), e(function () {\n    v && v(C);\n  }, [C, v]), e(function () {\n    C && C.setPosition(u);\n  }, [C, u]), e(function () {\n    C && p && C.setAltitude(p);\n  }, [C, p]), e(function () {\n    C && f && C.setRange(f);\n  }, [C, f]), e(function () {\n    C && g && C.setZIndex(g);\n  }, [C, g]), e(function () {\n    o && (w.current.id = o);\n  }, [o]), e(function () {\n    a && (w.current.className = a);\n  }, [a]), e(function () {\n    if (l) for (var n = 0, e = Object.entries(l); n < e.length; n++) {\n      var o = e[n];\n      w.current.style[o[0]] = o[1];\n    }\n  }, [l]), r.createPortal(d, w.current);\n},\n    p = n.createContext(void 0),\n    k = function k(t) {\n  var a = t.children,\n      i = t.averageCenter,\n      r = t.calculator,\n      s = t.clickable,\n      u = t.disableClickZoom,\n      d = t.gridSize,\n      k = t.hoverable,\n      f = t.minClusterSize,\n      m = t.minLevel,\n      g = t.styles,\n      v = t.texts,\n      w = t.onClusterclick,\n      C = t.onClusterdblclick,\n      y = t.onClustered,\n      h = t.onClusterout,\n      M = t.onClusterover,\n      b = t.onClusterrightclick,\n      O = t.onCreate,\n      I = c(\"MarkerClusterer\"),\n      x = o(),\n      L = x[0],\n      z = x[1];\n  return e(function () {\n    if (window.kakao.maps.MarkerClusterer) {\n      var n = new kakao.maps.MarkerClusterer({\n        averageCenter: i,\n        calculator: r,\n        clickable: s,\n        disableClickZoom: u,\n        gridSize: d,\n        hoverable: k,\n        minClusterSize: f,\n        minLevel: m,\n        styles: g,\n        texts: v\n      });\n      z(n);\n    } else console.warn(\"clusterer 라이브러리를 별도 로드 해야 사용 가능합니다. `https://apis.map.kakao.com/web/guide/#loadlibrary`\");\n  }, []), e(function () {\n    null == L || L.setMap(I);\n  }, [I, L]), e(function () {\n    L && O && O(L);\n  }, [L, O]), e(function () {\n    L && d && (L.setGridSize(d), L.redraw());\n  }, [L, d]), e(function () {\n    L && f && (L.setMinClusterSize(f), L.redraw());\n  }, [L, f]), e(function () {\n    L && void 0 !== i && (L.setAverageCenter(i), L.redraw());\n  }, [L, i]), e(function () {\n    L && m && (L.setMinLevel(m), L.redraw());\n  }, [L, m]), e(function () {\n    L && v && (L.setTexts(v), L.redraw());\n  }, [L, v]), e(function () {\n    L && r && (L.setCalculator(r), L.redraw());\n  }, [L, r]), e(function () {\n    L && g && (L.setStyles(g), L.redraw());\n  }, [L, g]), l(L, \"clusterclick\", w), l(L, \"clusterover\", M), l(L, \"clusterout\", h), l(L, \"clusterdblclick\", C), l(L, \"clusterrightclick\", b), l(L, \"clustered\", y), L ? n.createElement(p.Provider, {\n    value: L\n  }, a) : null;\n},\n    f = function f(o) {\n  var t = o.map,\n      r = o.position,\n      s = o.children,\n      u = o.altitude,\n      c = o.clickable,\n      k = o.draggable,\n      f = o.image,\n      m = o.infoWindowOptions,\n      g = o.onCreate,\n      v = o.onClick,\n      w = o.onDragEnd,\n      C = o.onDragStart,\n      y = o.onMouseOut,\n      h = o.onMouseOver,\n      M = o.opacity,\n      b = o.range,\n      O = o.title,\n      I = o.zIndex,\n      x = a(p),\n      L = i(function () {\n    return new kakao.maps.Marker({\n      altitude: u,\n      clickable: c,\n      draggable: k,\n      image: f,\n      opacity: M,\n      range: b,\n      title: O,\n      zIndex: I,\n      position: r\n    });\n  }, []);\n  return e(function () {\n    return x ? x.addMarker(L) : L.setMap(t), function () {\n      x ? x.removeMarker(L) : L.setMap(null);\n    };\n  }, [t, x, L]), e(function () {\n    g && g(L);\n  }, [L, g]), l(L, \"click\", v), l(L, \"dragstart\", C), l(L, \"dragend\", w), l(L, \"mouseout\", y), l(L, \"mouseover\", h), e(function () {\n    t && L && r && L.setPosition(r);\n  }, [t, L, r]), e(function () {\n    t && L && f && L.setImage(f);\n  }, [t, L, f]), e(function () {\n    t && L && u && L.setAltitude(u);\n  }, [t, L, u]), e(function () {\n    t && L && void 0 !== c && L.setClickable(c);\n  }, [t, L, c]), e(function () {\n    t && L && void 0 !== k && L.setDraggable(k);\n  }, [t, L, k]), e(function () {\n    t && L && M && L.setOpacity(M);\n  }, [t, L, M]), e(function () {\n    t && L && b && L.setRange(b);\n  }, [t, L, b]), e(function () {\n    t && L && O && L.setTitle(O);\n  }, [t, L, O]), e(function () {\n    t && L && I && L.setZIndex(I);\n  }, [t, L, I]), s ? n.createElement(d, {\n    position: r,\n    map: t,\n    marker: L,\n    id: null == m ? void 0 : m.id,\n    className: null == m ? void 0 : m.className,\n    style: null == m ? void 0 : m.style,\n    altitude: null == m ? void 0 : m.altitude,\n    disableAutoPan: null == m ? void 0 : m.disableAutoPan,\n    range: null == m ? void 0 : m.range,\n    removable: null == m ? void 0 : m.removable,\n    zIndex: null == m ? void 0 : m.zIndex\n  }, s) : null;\n},\n    m = function m(e) {\n  var o = e.image,\n      t = e.position,\n      a = e.children,\n      r = e.clickable,\n      l = e.draggable,\n      s = e.infoWindowOptions,\n      u = e.onClick,\n      d = e.onDragEnd,\n      p = e.onDragStart,\n      k = e.onMouseOut,\n      m = e.onMouseOver,\n      g = e.onCreate,\n      v = e.opacity,\n      w = e.title,\n      C = e.zIndex,\n      y = c(\"MapMarker\"),\n      h = i(function () {\n    var n, e, t, a, i, r, l, s, u, c, d, p;\n    return o && new kakao.maps.MarkerImage(o.src, new kakao.maps.Size(o.size.width, o.size.height), {\n      alt: null == (n = o.options) ? void 0 : n.alt,\n      coords: null == (e = o.options) ? void 0 : e.coords,\n      offset: (null == (t = o.options) ? void 0 : t.offset) && new kakao.maps.Point(null == (a = o.options) ? void 0 : a.offset.x, null == (i = o.options) ? void 0 : i.offset.y),\n      shape: null == (r = o.options) ? void 0 : r.shape,\n      spriteOrigin: (null == (l = o.options) ? void 0 : l.spriteOrigin) && new kakao.maps.Point(null == (s = o.options) ? void 0 : s.spriteOrigin.x, null == (u = o.options) ? void 0 : u.spriteOrigin.y),\n      spriteSize: (null == (c = o.options) ? void 0 : c.spriteSize) && new kakao.maps.Size(null == (d = o.options) ? void 0 : d.spriteSize.width, null == (p = o.options) ? void 0 : p.spriteSize.height)\n    });\n  }, [o]),\n      M = i(function () {\n    return \"lat\" in t ? new kakao.maps.LatLng(t.lat, t.lng) : new kakao.maps.Coords(t.x, t.y).toLatLng();\n  }, [t.lat, t.lng, t.x, t.y]);\n  return n.createElement(f, {\n    map: y,\n    position: M,\n    image: h,\n    clickable: r,\n    draggable: l,\n    infoWindowOptions: s,\n    onClick: u,\n    onDragEnd: d,\n    onDragStart: p,\n    onMouseOut: k,\n    onMouseOver: m,\n    onCreate: g,\n    opacity: v,\n    title: w,\n    zIndex: C\n  }, a);\n},\n    g = function g(e) {\n  var o = e.id,\n      t = e.className,\n      a = e.style,\n      r = e.position,\n      l = e.children,\n      s = e.disableAutoPan,\n      u = e.removable,\n      p = e.zIndex,\n      k = e.onCreate,\n      f = c(\"MapInfoWindow\"),\n      m = i(function () {\n    return new kakao.maps.LatLng(r.lat, r.lng);\n  }, [r.lat, r.lng]);\n  return n.createElement(d, {\n    id: o,\n    className: t,\n    style: a,\n    disableAutoPan: s,\n    removable: u,\n    zIndex: p,\n    map: f,\n    position: m,\n    onCreate: k\n  }, l);\n},\n    v = function v(n) {\n  var o = n.id,\n      a = n.className,\n      l = n.style,\n      s = n.position,\n      u = n.children,\n      d = n.clickable,\n      p = n.xAnchor,\n      k = n.yAnchor,\n      f = n.zIndex,\n      m = n.onCreate,\n      g = c(\"CustomOverlayMap\"),\n      v = t(document.createElement(\"div\")),\n      w = i(function () {\n    return new kakao.maps.LatLng(s.lat, s.lng);\n  }, [s.lat, s.lng]),\n      C = i(function () {\n    return new kakao.maps.CustomOverlay({\n      clickable: d,\n      xAnchor: p,\n      yAnchor: k,\n      zIndex: f,\n      position: w,\n      content: v.current\n    });\n  }, [d, p, k]);\n  return e(function () {\n    if (g) return C.setMap(g), function () {\n      C.setMap(null);\n    };\n  }, [g, C]), e(function () {\n    m && m(C);\n  }, [C, m]), e(function () {\n    C.setPosition(w);\n  }, [C, w]), e(function () {\n    f && C.setZIndex(f);\n  }, [C, f]), e(function () {\n    o && (v.current.id = o);\n  }, [o]), e(function () {\n    a && (v.current.className = a);\n  }, [a]), e(function () {\n    if (l) for (var n = 0, e = Object.entries(l); n < e.length; n++) {\n      var o = e[n];\n      v.current.style[o[0]] = o[1];\n    }\n  }, [l]), r.createPortal(u, v.current);\n},\n    w = function w(n) {\n  var o = n.position,\n      t = void 0 === o ? kakao.maps.ControlPosition.TOPRIGHT : o,\n      a = c(\"MapTypeControl\"),\n      r = i(function () {\n    return new kakao.maps.MapTypeControl();\n  }, []);\n  return e(function () {\n    return a.addControl(r, t), function () {\n      a.removeControl(r);\n    };\n  }, [a, t]), null;\n},\n    C = function C(n) {\n  var o = n.position,\n      t = void 0 === o ? kakao.maps.ControlPosition.RIGHT : o,\n      a = c(\"ZoomControl\"),\n      r = i(function () {\n    return new kakao.maps.ZoomControl();\n  }, []);\n  return e(function () {\n    return a.addControl(r, t), function () {\n      a.removeControl(r);\n    };\n  }, [a, t]), null;\n},\n    y = function y(n) {\n  var o = n.type,\n      t = c(\"MapTypeId\");\n  return e(function () {\n    return t.addOverlayMapTypeId(o), function () {\n      t.removeOverlayMapTypeId(o);\n    };\n  }, [t, o]), null;\n},\n    h = function h(n) {\n  var o = n.center,\n      t = n.radius,\n      a = n.fillColor,\n      r = n.fillOpacity,\n      s = n.strokeColor,\n      u = n.strokeOpacity,\n      d = n.strokeStyle,\n      p = n.strokeWeight,\n      k = n.zIndex,\n      f = n.onMouseover,\n      m = n.onMouseout,\n      g = n.onMousemove,\n      v = n.onMousedown,\n      w = n.onClick,\n      C = n.onCreate,\n      y = c(\"Circle\"),\n      h = i(function () {\n    return new kakao.maps.LatLng(o.lat, o.lng);\n  }, [o.lat, o.lng]),\n      M = i(function () {\n    return new kakao.maps.Circle({\n      center: h,\n      radius: t,\n      fillColor: a,\n      fillOpacity: r,\n      strokeColor: s,\n      strokeOpacity: u,\n      strokeStyle: d,\n      strokeWeight: p,\n      zIndex: k\n    });\n  }, []);\n  return e(function () {\n    return M.setMap(y), function () {\n      M.setMap(null);\n    };\n  }, [y, M]), e(function () {\n    C && C(M);\n  }, [M, C]), e(function () {\n    M && M.setPosition(h);\n  }, [M, h]), e(function () {\n    M.setRadius(t);\n  }, [M, t]), e(function () {\n    k && M.setZIndex(k);\n  }, [M, k]), e(function () {\n    M.setOptions({\n      fillColor: a,\n      fillOpacity: r,\n      strokeColor: s,\n      strokeOpacity: u,\n      strokeStyle: d,\n      strokeWeight: p\n    });\n  }, [M, a, r, s, u, d, p]), l(M, \"mouseover\", f), l(M, \"mouseout\", m), l(M, \"mousemove\", g), l(M, \"mousedown\", v), l(M, \"click\", w), null;\n},\n    M = function M(n) {\n  var o = n.path,\n      t = n.endArrow,\n      a = n.onClick,\n      r = n.onMousedown,\n      s = n.onMousemove,\n      u = n.onMouseout,\n      d = n.onMouseover,\n      p = n.onCreate,\n      k = n.strokeColor,\n      f = n.strokeOpacity,\n      m = n.strokeStyle,\n      g = n.strokeWeight,\n      v = n.zIndex,\n      w = c(\"Polyline\"),\n      C = i(function () {\n    return o.every(function (n) {\n      return n instanceof Array;\n    }) ? o.map(function (n) {\n      return n.map(function (n) {\n        return new kakao.maps.LatLng(n.lat, n.lng);\n      });\n    }) : o.map(function (n) {\n      return new kakao.maps.LatLng(n.lat, n.lng);\n    });\n  }, [o]),\n      y = i(function () {\n    return new kakao.maps.Polyline({\n      path: C,\n      endArrow: t,\n      strokeColor: k,\n      strokeOpacity: f,\n      strokeStyle: m,\n      strokeWeight: g,\n      zIndex: v\n    });\n  }, []);\n  return e(function () {\n    return y.setMap(w), function () {\n      return y.setMap(null);\n    };\n  }, [w, y]), e(function () {\n    p && p(y);\n  }, [y, p]), e(function () {\n    y.setOptions({\n      endArrow: t,\n      strokeColor: k,\n      strokeOpacity: f,\n      strokeStyle: m,\n      strokeWeight: g\n    });\n  }, [y, t, k, f, m, g]), e(function () {\n    y.setPath(C);\n  }, [y, C]), e(function () {\n    v && y.setZIndex(v);\n  }, [y, v]), l(y, \"mouseover\", d), l(y, \"mouseout\", u), l(y, \"mousemove\", s), l(y, \"mousedown\", r), l(y, \"click\", a), null;\n},\n    b = function b(n) {\n  var o = n.path,\n      t = n.onClick,\n      a = n.onMousedown,\n      r = n.onMousemove,\n      s = n.onMouseout,\n      u = n.onMouseover,\n      d = n.onCreate,\n      p = n.strokeColor,\n      k = n.strokeOpacity,\n      f = n.strokeStyle,\n      m = n.strokeWeight,\n      g = n.fillColor,\n      v = n.fillOpacity,\n      w = n.zIndex,\n      C = c(\"Polygon\"),\n      y = i(function () {\n    return o.every(function (n) {\n      return n instanceof Array;\n    }) ? o.map(function (n) {\n      return n.map(function (n) {\n        return new kakao.maps.LatLng(n.lat, n.lng);\n      });\n    }) : o.map(function (n) {\n      return new kakao.maps.LatLng(n.lat, n.lng);\n    });\n  }, [o]),\n      h = i(function () {\n    return new kakao.maps.Polygon({\n      path: y,\n      fillColor: g,\n      fillOpacity: v,\n      strokeColor: p,\n      strokeOpacity: k,\n      strokeStyle: f,\n      strokeWeight: m,\n      zIndex: w\n    });\n  }, []);\n  return e(function () {\n    return h.setMap(C), function () {\n      return h.setMap(null);\n    };\n  }, [C, h]), e(function () {\n    d && d(h);\n  }, [h, d]), e(function () {\n    h.setOptions({\n      fillColor: g,\n      fillOpacity: v,\n      strokeColor: p,\n      strokeOpacity: k,\n      strokeStyle: f,\n      strokeWeight: m\n    });\n  }, [h, g, v, p, k, f, m]), e(function () {\n    h.setPath(y);\n  }, [h, y]), e(function () {\n    w && h.setZIndex(w);\n  }, [h, w]), l(h, \"mouseover\", u), l(h, \"mouseout\", s), l(h, \"mousemove\", r), l(h, \"mousedown\", a), l(h, \"click\", t), null;\n},\n    O = function O(n) {\n  var o = n.bounds,\n      t = n.onClick,\n      a = n.onMousedown,\n      r = n.onMousemove,\n      s = n.onMouseout,\n      u = n.onMouseover,\n      d = n.onCreate,\n      p = n.strokeColor,\n      k = n.strokeOpacity,\n      f = n.strokeStyle,\n      m = n.strokeWeight,\n      g = n.fillColor,\n      v = n.fillOpacity,\n      w = n.zIndex,\n      C = c(\"Rectangle\"),\n      y = i(function () {\n    return new kakao.maps.LatLngBounds(new kakao.maps.LatLng(o.sw.lat, o.sw.lng), new kakao.maps.LatLng(o.ne.lat, o.ne.lng));\n  }, [o]),\n      h = i(function () {\n    return new kakao.maps.Rectangle({\n      bounds: y,\n      fillColor: g,\n      fillOpacity: v,\n      strokeColor: p,\n      strokeOpacity: k,\n      strokeStyle: f,\n      strokeWeight: m,\n      zIndex: w\n    });\n  }, []);\n  return e(function () {\n    return h.setMap(C), function () {\n      return h.setMap(null);\n    };\n  }, [C, h]), e(function () {\n    d && d(h);\n  }, [h, d]), e(function () {\n    h.setOptions({\n      fillColor: g,\n      fillOpacity: v,\n      strokeColor: p,\n      strokeOpacity: k,\n      strokeStyle: f,\n      strokeWeight: m\n    });\n  }, [h, g, v, p, k, f, m]), e(function () {\n    h.setBounds(y);\n  }, [h, y]), e(function () {\n    w && h.setZIndex(w);\n  }, [h, w]), l(h, \"mouseover\", u), l(h, \"mouseout\", s), l(h, \"mousemove\", r), l(h, \"mousedown\", a), l(h, \"click\", t), null;\n},\n    I = function I(n) {\n  var o = n.center,\n      t = n.rx,\n      a = n.ry,\n      r = n.fillColor,\n      s = n.fillOpacity,\n      u = n.strokeColor,\n      d = n.strokeOpacity,\n      p = n.strokeStyle,\n      k = n.strokeWeight,\n      f = n.zIndex,\n      m = n.onMouseover,\n      g = n.onMouseout,\n      v = n.onMousemove,\n      w = n.onMousedown,\n      C = n.onClick,\n      y = n.onCreate,\n      h = c(\"Ellipse\"),\n      M = i(function () {\n    return new kakao.maps.LatLng(o.lat, o.lng);\n  }, [o.lat, o.lng]),\n      b = i(function () {\n    return new kakao.maps.Ellipse({\n      center: M,\n      rx: t,\n      ry: a,\n      fillColor: r,\n      fillOpacity: s,\n      strokeColor: u,\n      strokeOpacity: d,\n      strokeStyle: p,\n      strokeWeight: k,\n      zIndex: f\n    });\n  }, []);\n  return e(function () {\n    return b.setMap(h), function () {\n      b.setMap(null);\n    };\n  }, [h, b]), e(function () {\n    y && y(b);\n  }, [b, y]), e(function () {\n    b && b.setPosition(M);\n  }, [b, M]), e(function () {\n    b.setRadius(t, a);\n  }, [b, t, a]), e(function () {\n    f && b.setZIndex(f);\n  }, [b, f]), e(function () {\n    b.setOptions({\n      fillColor: r,\n      fillOpacity: s,\n      strokeColor: u,\n      strokeOpacity: d,\n      strokeStyle: p,\n      strokeWeight: k\n    });\n  }, [b, r, s, u, d, p, k]), l(b, \"mouseover\", m), l(b, \"mouseout\", g), l(b, \"mousemove\", v), l(b, \"mousedown\", w), l(b, \"click\", C), null;\n};\n\nfunction x(n, e) {\n  return (x = Object.setPrototypeOf || function (n, e) {\n    return n.__proto__ = e, n;\n  })(n, e);\n}\n\nvar L = function L(n) {\n  var o = n.draw,\n      t = n.onAdd,\n      a = n.onRemove,\n      r = n.onCreate,\n      l = c(),\n      s = i(function () {\n    return new ( /*#__PURE__*/function (n) {\n      var e, o;\n\n      function t(e, o, t) {\n        var a;\n        return (a = n.call(this) || this).draw = e, a.onAdd = o, a.onRemove = t, a;\n      }\n\n      return o = n, (e = t).prototype = Object.create(o.prototype), e.prototype.constructor = e, x(e, o), t;\n    }(kakao.maps.AbstractOverlay))(o, t, a);\n  }, [o, t, a]);\n  return e(function () {\n    return s.setMap(l), function () {\n      s.setMap(null);\n    };\n  }, [l, s]), e(function () {\n    r && r(s);\n  }, [s, r]), null;\n},\n    z = n.createContext(void 0),\n    P = function P(a) {\n  var i = a.id,\n      r = void 0 === i ? \"kakao-roadview-container\" : i,\n      s = a.style,\n      u = a.children,\n      c = a.position,\n      d = a.className,\n      p = a.pan,\n      k = a.panoId,\n      f = a.panoX,\n      m = a.panoY,\n      g = a.tilt,\n      v = a.zoom,\n      w = a.onCreate,\n      C = a.onInit,\n      y = a.onPanoidChange,\n      h = a.onPositionChanged,\n      M = a.onViewpointChange,\n      b = a.onErrorGetNearestPanoId,\n      O = o(!0),\n      I = O[0],\n      x = O[1],\n      L = o(),\n      P = L[0],\n      S = L[1],\n      A = t(null);\n  return e(function () {\n    if (window.kakao) {\n      if (A.current) {\n        var n = new kakao.maps.Roadview(A.current, {\n          pan: p,\n          panoId: k,\n          panoX: f,\n          panoY: m,\n          tilt: g,\n          zoom: v\n        });\n        S(n);\n      }\n    } else console.warn(\"kakao map javascript api를 먼저 불러와야 합니다. `https://apis.map.kakao.com/web/guide`\");\n  }, [f, m, v]), e(function () {\n    P && w && w(P);\n  }, [P, w]), e(function () {\n    if (P && !k && (P.getPosition().getLat() !== c.lat || P.getPosition().getLng() !== c.lng)) {\n      var n = new kakao.maps.LatLng(c.lat, c.lng);\n      new kakao.maps.RoadviewClient().getNearestPanoId(n, c.radius, function (e) {\n        null === e && b ? b(P) : P.setPanoId(e, n);\n      });\n    }\n  }, [P, k, c.lat, c.lng, c.radius, b]), e(function () {\n    if (P && k && k !== P.getPanoId() && (P.getPosition().getLat() !== c.lat || P.getPosition().getLng() !== c.lng)) {\n      var n = new kakao.maps.LatLng(c.lat, c.lng);\n      P.setPanoId(k, n);\n    }\n  }, [P, k, c.lat, c.lng]), e(function () {\n    if (P) {\n      var n = P.getViewpoint();\n      n.pan === p && n.tilt === g || (p && (n.pan = p), g && (n.tilt = g), P.setViewpoint(n));\n    }\n  }, [P, p, g]), l(P, \"init\", function (n) {\n    x(!1), C && C(n);\n  }), l(P, \"panoid_changed\", y), l(P, \"viewpoint_changed\", M), l(P, \"position_changed\", h), n.createElement(n.Fragment, null, n.createElement(\"div\", {\n    id: r,\n    className: d,\n    style: s,\n    ref: A\n  }), P && !I && n.createElement(z.Provider, {\n    value: P\n  }, u));\n},\n    S = function S(n) {\n  var e = a(z);\n  if (!e) throw new Error((n ? n + \" Component\" : \"useRoadview\") + \" must exist inside Roadview Component!\");\n  return e;\n},\n    A = function A(n) {\n  var o = n.id,\n      a = n.className,\n      l = n.style,\n      s = n.position,\n      u = n.children,\n      c = n.clickable,\n      d = n.xAnchor,\n      p = n.yAnchor,\n      k = n.zIndex,\n      f = n.altitude,\n      m = n.range,\n      g = n.isFocus,\n      v = n.onCreate,\n      w = S(\"CustomOverlayRoadview\"),\n      C = t(document.createElement(\"div\")),\n      y = i(function () {\n    return \"lat\" in s ? new kakao.maps.LatLng(s.lat, s.lng) : new kakao.maps.Viewpoint(s.pan, s.tilt, s.zoom, s.panoId);\n  }, [s.lat, s.lng, s.pan, s.tilt, s.zoom, s.panoId]),\n      h = i(function () {\n    return new kakao.maps.CustomOverlay({\n      clickable: c,\n      xAnchor: d,\n      yAnchor: p,\n      zIndex: k,\n      position: y,\n      content: C.current\n    });\n  }, [c, d, p]);\n  return e(function () {\n    if (w) {\n      if (h.setMap(w), g) {\n        var n = w.getProjection().viewpointFromCoords(h.getPosition(), h.getAltitude());\n        w.setViewpoint(n);\n      }\n\n      return function () {\n        h.setMap(null);\n      };\n    }\n  }, [h, w]), e(function () {\n    v && v(h);\n  }, [h, v]), e(function () {\n    h.setPosition(y);\n  }, [h, y]), e(function () {\n    k && h.setZIndex(k);\n  }, [h, k]), e(function () {\n    f && h.setAltitude(f);\n  }, [h, f]), e(function () {\n    m && h.setRange(m);\n  }, [h, m]), e(function () {\n    o && (C.current.id = o);\n  }, [o]), e(function () {\n    a && (C.current.className = a);\n  }, [a]), e(function () {\n    if (l) for (var n = 0, e = Object.entries(l); n < e.length; n++) {\n      var o = e[n];\n      C.current.style[o[0]] = o[1];\n    }\n  }, [l]), r.createPortal(u, C.current);\n},\n    E = function E(e) {\n  var o = e.image,\n      t = e.position,\n      a = e.children,\n      r = e.altitude,\n      l = e.clickable,\n      s = e.infoWindowOptions,\n      u = e.onClick,\n      c = e.onDragEnd,\n      d = e.onDragStart,\n      p = e.onMouseOut,\n      k = e.onMouseOver,\n      m = e.onCreate,\n      g = e.opacity,\n      v = e.range,\n      w = e.title,\n      C = e.zIndex,\n      y = S(\"RoadviewMarker\"),\n      h = i(function () {\n    var n, e, t, a, i, r, l, s, u, c, d, p;\n    return o && new kakao.maps.MarkerImage(o.src, new kakao.maps.Size(o.size.width, o.size.height), {\n      alt: null == (n = o.options) ? void 0 : n.alt,\n      coords: null == (e = o.options) ? void 0 : e.coords,\n      offset: (null == (t = o.options) ? void 0 : t.offset) && new kakao.maps.Point(null == (a = o.options) ? void 0 : a.offset.x, null == (i = o.options) ? void 0 : i.offset.y),\n      shape: null == (r = o.options) ? void 0 : r.shape,\n      spriteOrigin: (null == (l = o.options) ? void 0 : l.spriteOrigin) && new kakao.maps.Point(null == (s = o.options) ? void 0 : s.spriteOrigin.x, null == (u = o.options) ? void 0 : u.spriteOrigin.y),\n      spriteSize: (null == (c = o.options) ? void 0 : c.spriteSize) && new kakao.maps.Size(null == (d = o.options) ? void 0 : d.spriteSize.width, null == (p = o.options) ? void 0 : p.spriteSize.height)\n    });\n  }, [o]),\n      M = i(function () {\n    return \"lat\" in t ? new kakao.maps.LatLng(t.lat, t.lng) : \"x\" in t ? new kakao.maps.Coords(t.x, t.y).toLatLng() : new kakao.maps.Viewpoint(t.pan, t.tilt, t.zoom, t.panoId);\n  }, [t.lat, t.lng, t.x, t.y, t.pan, t.tilt, t.zoom, null == t ? void 0 : t.panoId]);\n  return n.createElement(f, {\n    map: y,\n    position: M,\n    image: h,\n    altitude: r,\n    clickable: l,\n    infoWindowOptions: s,\n    onClick: u,\n    onDragEnd: c,\n    onDragStart: d,\n    onMouseOut: p,\n    onMouseOver: k,\n    onCreate: m,\n    opacity: g,\n    range: v,\n    title: w,\n    zIndex: C\n  }, a);\n},\n    W = function W(e) {\n  var o = e.id,\n      t = e.className,\n      a = e.style,\n      r = e.position,\n      l = e.children,\n      s = e.altitude,\n      u = e.disableAutoPan,\n      c = e.range,\n      p = e.removable,\n      k = e.zIndex,\n      f = e.onCreate,\n      m = S(\"RoadviewInfoWindow\"),\n      g = i(function () {\n    return \"lat\" in r ? new kakao.maps.LatLng(r.lat, r.lng) : new kakao.maps.Viewpoint(r.pan, r.tilt, r.zoom, r.panoId);\n  }, [r.lat, r.lng, r.pan, r.tilt, r.zoom, r.panoId]);\n  return n.createElement(d, {\n    id: o,\n    className: t,\n    style: a,\n    altitude: s,\n    disableAutoPan: u,\n    range: c,\n    removable: p,\n    zIndex: k,\n    map: m,\n    position: g,\n    onCreate: f\n  }, l);\n};\n\nexport { L as AbstractOverlay, h as Circle, v as CustomOverlayMap, A as CustomOverlayRoadview, I as Ellipse, u as Map, g as MapInfoWindow, m as MapMarker, w as MapTypeControl, y as MapTypeId, k as MarkerClusterer, b as Polygon, M as Polyline, O as Rectangle, P as Roadview, W as RoadviewInfoWindow, E as RoadviewMarker, C as ZoomControl, c as useMap, S as useRoadview };","map":null,"metadata":{},"sourceType":"module"}