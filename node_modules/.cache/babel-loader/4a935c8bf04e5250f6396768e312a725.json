{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bitcamp\\\\Desktop\\\\\\uC790\\uBE44\\uC2A412-21\\\\jarviis-msa-frontend\\\\src\\\\features\\\\board\\\\components\\\\BoardRegister.tsx\";\nimport { useState } from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport { createRequest } from \"../reducer/boardSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BoardRegister = props => {\n  const [validated, setValidated] = useState(false);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    event.stopPropagation();\n    const form = event.currentTarget;\n\n    if (!form.checkValidity()) {\n      setValidated(false);\n      return;\n    }\n\n    setValidated(true); // Form.Grou의 controlid는 control의 id를 생성 => form[id] => control 노드 로 접근\n\n    console.log(form.titleInput.value);\n    const board = {\n      title: form.titleInput.value,\n      content: form.contentText.value\n    };\n    addBoard(board);\n    props.history.push('/');\n  };\n\n  const addBoard = async board => {\n    createRequest;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    noValidate: true,\n    validated: validated,\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"titleInput\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"\\uC81C\\uBAA9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        required: true,\n        placeholder: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n        children: \"Looks good!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n        type: \"invalid\",\n        children: \"\\uC81C\\uBAA9\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694!!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"contentText\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"\\uB0B4\\uC6A9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        required: true,\n        as: \"textarea\",\n        rows: 20\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n        children: \"Looks good!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n        type: \"invalid\",\n        children: \"\\uB0B4\\uC6A9\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694!!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      children: \"\\uC800\\uC7A5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\nexport default BoardRegister;","map":{"version":3,"sources":["C:/Users/bitcamp/Desktop/자비스12-21/jarviis-msa-frontend/src/features/board/components/BoardRegister.tsx"],"names":["useState","Button","Form","createRequest","BoardRegister","props","validated","setValidated","handleSubmit","event","preventDefault","stopPropagation","form","currentTarget","checkValidity","console","log","titleInput","value","board","title","content","contentText","addBoard","history","push"],"mappings":";AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAAQC,MAAR,EAAgBC,IAAhB,QAA2B,iBAA3B;AACA,SAAoBC,aAApB,QAAyC,uBAAzC;;;AAGA,MAAMC,aAAuB,GAAIC,KAAD,IAAgB;AAC9C,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,KAAD,CAA1C;;AAEA,QAAMQ,YAAY,GAAIC,KAAD,IAAgB;AACnCA,IAAAA,KAAK,CAACC,cAAN;AACAD,IAAAA,KAAK,CAACE,eAAN;AAEA,UAAMC,IAAI,GAAGH,KAAK,CAACI,aAAnB;;AACA,QAAI,CAACD,IAAI,CAACE,aAAL,EAAL,EAA2B;AACzBP,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACA;AACD;;AAEDA,IAAAA,YAAY,CAAC,IAAD,CAAZ,CAVmC,CAWnC;;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAI,CAACK,UAAL,CAAgBC,KAA5B;AACA,UAAMC,KAAK,GAAG;AACZC,MAAAA,KAAK,EAAER,IAAI,CAACK,UAAL,CAAgBC,KADX;AAEZG,MAAAA,OAAO,EAAET,IAAI,CAACU,WAAL,CAAiBJ;AAFd,KAAd;AAIAK,IAAAA,QAAQ,CAACJ,KAAD,CAAR;AAEAd,IAAAA,KAAK,CAACmB,OAAN,CAAcC,IAAd,CAAmB,GAAnB;AACD,GApBD;;AAsBA,QAAMF,QAAQ,GAAG,MAAOJ,KAAP,IAA4B;AAC3ChB,IAAAA,aAAa;AACd,GAFD;;AAIA,sBACE,QAAC,IAAD;AAAM,IAAA,UAAU,MAAhB;AAAiB,IAAA,SAAS,EAAEG,SAA5B;AAAuC,IAAA,QAAQ,EAAEE,YAAjD;AAAA,4BACE,QAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,YAAtB;AAAA,8BACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,IAAD,CAAM,OAAN;AAAc,QAAA,QAAQ,MAAtB;AAAuB,QAAA,WAAW,EAAC;AAAnC;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE,QAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAuB,QAAA,IAAI,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAOE,QAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,aAAtB;AAAA,8BACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,IAAD,CAAM,OAAN;AAAc,QAAA,QAAQ,MAAtB;AAAuB,QAAA,EAAE,EAAC,UAA1B;AAAqC,QAAA,IAAI,EAAE;AAA3C;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE,QAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAuB,QAAA,IAAI,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF,eAaE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,SAAhB;AAA0B,MAAA,IAAI,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CAhDD;;AAiDA,eAAeJ,aAAf","sourcesContent":["import { useState } from \"react\";\nimport {Button, Form} from \"react-bootstrap\";\nimport { BoardData, createRequest } from \"../reducer/boardSlice\";\n\n\nconst BoardRegister: React.FC = (props: any) => {\n  const [validated, setValidated] = useState(false);\n \n  const handleSubmit = (event: any) => {\n    event.preventDefault();\n    event.stopPropagation();\n \n    const form = event.currentTarget;\n    if (!form.checkValidity()) {\n      setValidated(false);\n      return;\n    }\n \n    setValidated(true);\n    // Form.Grou의 controlid는 control의 id를 생성 => form[id] => control 노드 로 접근\n    console.log(form.titleInput.value);\n    const board = {\n      title: form.titleInput.value,\n      content: form.contentText.value\n    }\n    addBoard(board);\n \n    props.history.push('/');\n  };\n \n  const addBoard = async (board: BoardData) => {\n    createRequest\n  }\n \n  return (\n    <Form noValidate validated={validated} onSubmit={handleSubmit}>\n      <Form.Group controlId=\"titleInput\">\n        <Form.Label>제목</Form.Label>\n        <Form.Control required placeholder=\"\" />\n        <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n        <Form.Control.Feedback type=\"invalid\">제목을 입력하세요!!</Form.Control.Feedback>\n      </Form.Group>\n      <Form.Group controlId=\"contentText\">\n        <Form.Label>내용</Form.Label>\n        <Form.Control required as=\"textarea\" rows={20} />\n        <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n        <Form.Control.Feedback type=\"invalid\">내용을 입력하세요!!</Form.Control.Feedback>\n      </Form.Group>\n      <Button variant=\"primary\" type=\"submit\">\n        저장\n      </Button>\n    </Form>\n  );\n};\nexport default BoardRegister;"]},"metadata":{},"sourceType":"module"}