{"ast":null,"code":"import jwtDecode from \"jwt-decode\";\nexport class jwtUtils {\n  static isAuth(token) {\n    if (!token) {\n      return false;\n    }\n\n    const decoded = jwtDecode(token); // console.log(decoded);\n\n    if (decoded.exp > new Date().getTime() / 1000) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  static getId(token) {\n    const decoded = jwtDecode(token);\n    return decoded.jti;\n  }\n\n  static getName(token) {\n    const decoded = jwtDecode(token);\n    return decoded.subject;\n  }\n\n  static getRoles(token) {\n    const decoded = jwtDecode(token);\n    return decoded.roles;\n  }\n\n}","map":{"version":3,"sources":["C:/Users/seosuwan/Desktop/새 폴더/mern-stack-front/src/features/board/utils/jwtUtils.ts"],"names":["jwtDecode","jwtUtils","isAuth","token","decoded","exp","Date","getTime","getId","jti","getName","subject","getRoles","roles"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,YAAtB;AAEA,OAAO,MAAMC,QAAN,CAAe;AACP,SAANC,MAAM,CAACC,KAAD,EAAa;AACxB,QAAI,CAACA,KAAL,EAAY;AACV,aAAO,KAAP;AACD;;AACD,UAAMC,OAAY,GAAGJ,SAAS,CAACG,KAAD,CAA9B,CAJwB,CAKxB;;AACA,QAAIC,OAAO,CAACC,GAAR,GAAc,IAAIC,IAAJ,GAAWC,OAAX,KAAuB,IAAzC,EAA+C;AAC7C,aAAO,IAAP;AACD,KAFD,MAEO;AACL,aAAO,KAAP;AACD;AACF;;AAEW,SAALC,KAAK,CAACL,KAAD,EAAa;AACvB,UAAMC,OAAY,GAAGJ,SAAS,CAACG,KAAD,CAA9B;AACA,WAAOC,OAAO,CAACK,GAAf;AACD;;AAEa,SAAPC,OAAO,CAACP,KAAD,EAAa;AACzB,UAAMC,OAAY,GAAGJ,SAAS,CAACG,KAAD,CAA9B;AACA,WAAOC,OAAO,CAACO,OAAf;AACD;;AAEc,SAARC,QAAQ,CAACT,KAAD,EAAa;AAC1B,UAAMC,OAAY,GAAGJ,SAAS,CAACG,KAAD,CAA9B;AACA,WAAOC,OAAO,CAACS,KAAf;AACD;;AA3BmB","sourcesContent":["import jwtDecode from \"jwt-decode\";\n\nexport class jwtUtils {\n  static isAuth(token: any) {\n    if (!token) {\n      return false;\n    }\n    const decoded: any = jwtDecode(token);\n    // console.log(decoded);\n    if (decoded.exp > new Date().getTime() / 1000) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  static getId(token: any) {\n    const decoded: any = jwtDecode(token)\n    return decoded.jti;\n  }\n\n  static getName(token: any) {\n    const decoded: any = jwtDecode(token)\n    return decoded.subject;\n  }\n\n  static getRoles(token: any) {\n    const decoded: any = jwtDecode(token)\n    return decoded.roles;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}