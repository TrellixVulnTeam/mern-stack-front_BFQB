{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\seosuwan\\\\Desktop\\\\\\uC0C8 \\uD3F4\\uB354\\\\jarviis-msa-frontend\\\\src\\\\features\\\\board\\\\containers\\\\CommentList.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport { Button, Col, Form, Row } from \"react-bootstrap\";\nimport \"../styles/CommentList.scss\";\nimport { jwtUtils } from \"../utils/jwtUtils\";\nimport { useSelector } from \"react-redux\"; // import api from \"../utils/api\";\n\nimport AlertModal from \"../components/AlertModal\";\nimport { StringUtils } from \"../utils/StringUtils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CommentList = props => {\n  const [showModal, setShowModal] = useState(false);\n  const [comments, setComments] = useState([]);\n  const token = useSelector(state => state.Auth.token);\n  useEffect(() => {\n    console.log(props.history);\n\n    if (!props.board_id) {\n      return;\n    }\n\n    getComments(props.board_id);\n  }, [props.board_id]);\n\n  const getComments = async board_id => {// const res = await api.get(`/api/comment/list?board_id=${props.board_id}`);\n    // setComments(res.data);\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    event.stopPropagation();\n    const form = event.currentTarget;\n    const comment = {\n      board_id: props.board_id,\n      content: form.commentText.value,\n      user_id: jwtUtils.getId(token)\n    }; // let res = await api.post('/api/comment', comment);\n    // console.log(res);\n    // res = await api.get(`/api/comment?id=${res.data.id}`);\n\n    const newComments = [...comments]; // newComments.unshift(res.data);\n\n    setComments(newComments);\n    form.commentText.value = '';\n  };\n\n  const handleFocus = () => {\n    if (!jwtUtils.isAuth(token)) {\n      setShowModal(true);\n    }\n  };\n\n  const onCancel = () => {\n    setShowModal(false);\n  };\n\n  const onOk = () => {\n    setShowModal(false); // 로그인후 돌아올수 있게 현재경로를 세팅한다.\n\n    props.history.push(`/login?redirectUrl=${props.history.location.pathname}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      className: \"mb-4\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"commentText\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"\\uB313\\uAE00\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: true,\n          as: \"textarea\",\n          rows: 4,\n          onClick: handleFocus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        children: \"\\uB4F1\\uB85D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), comments.map(comment => {\n      var _comment$user;\n\n      return /*#__PURE__*/_jsxDEV(Row, {\n        className: \"comment\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-between\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"date\",\n              children: (_comment$user = comment.user) === null || _comment$user === void 0 ? void 0 : _comment$user.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"date\",\n              children: StringUtils.getRecentDate(comment.created)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 12,\n          children: comment.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)]\n      }, comment.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(AlertModal, {\n      show: showModal,\n      header: \"\\uB313\\uAE00 \\uB4F1\\uB85D\",\n      body: \"\\uB85C\\uADF8\\uC778\\uD558\\uC2DC\\uACA0\\uC2B5\\uB2C8\\uAE4C?\",\n      centered: true,\n      onOk: onOk,\n      onCancel: onCancel\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\nexport default CommentList;","map":{"version":3,"sources":["C:/Users/seosuwan/Desktop/새 폴더/jarviis-msa-frontend/src/features/board/containers/CommentList.tsx"],"names":["React","useEffect","useState","Button","Col","Form","Row","jwtUtils","useSelector","AlertModal","StringUtils","CommentList","props","showModal","setShowModal","comments","setComments","token","state","Auth","console","log","history","board_id","getComments","handleSubmit","event","preventDefault","stopPropagation","form","currentTarget","comment","content","commentText","value","user_id","getId","newComments","handleFocus","isAuth","onCancel","onOk","push","location","pathname","map","user","username","getRecentDate","created","id"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {Button, Col, Form, Row} from \"react-bootstrap\";\r\nimport {Comment} from \"../reducer/boardSlice\";\r\nimport \"../styles/CommentList.scss\";\r\nimport {jwtUtils} from \"../utils/jwtUtils\";\r\nimport {useSelector} from \"react-redux\";\r\n// import api from \"../utils/api\";\r\nimport AlertModal from \"../components/AlertModal\";\r\nimport {StringUtils} from \"../utils/StringUtils\";\r\n\r\ninterface Props {\r\n  board_id: number;\r\n  history: any;\r\n}\r\n\r\nconst CommentList: React.FC<Props> = (props) => {\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [comments, setComments] = useState<Array<Comment>>([]);\r\n  const token = useSelector((state: any) => state.Auth.token);\r\n\r\n  useEffect(() => {\r\n    console.log(props.history);\r\n    if (!props.board_id) {\r\n      return;\r\n    }\r\n\r\n    getComments(props.board_id);\r\n  }, [props.board_id]);\r\n\r\n  const getComments = async (board_id: number) => {\r\n    // const res = await api.get(`/api/comment/list?board_id=${props.board_id}`);\r\n    // setComments(res.data);\r\n  }\r\n\r\n\r\n  const handleSubmit = async (event: any) => {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    const form = event.currentTarget;\r\n\r\n    const comment = {\r\n      board_id: props.board_id,\r\n      content: form.commentText.value,\r\n      user_id: jwtUtils.getId(token)\r\n    }\r\n\r\n    // let res = await api.post('/api/comment', comment);\r\n    // console.log(res);\r\n    // res = await api.get(`/api/comment?id=${res.data.id}`);\r\n\r\n    const newComments = [...comments];\r\n    // newComments.unshift(res.data);\r\n\r\n    setComments(newComments);\r\n    form.commentText.value = '';\r\n  };\r\n\r\n  const handleFocus = () => {\r\n    if (!jwtUtils.isAuth(token)) {\r\n      setShowModal(true);\r\n    }\r\n  }\r\n\r\n  const onCancel = () => {\r\n    setShowModal(false);\r\n  }\r\n\r\n  const onOk = () => {\r\n    setShowModal(false);\r\n    // 로그인후 돌아올수 있게 현재경로를 세팅한다.\r\n    props.history.push(`/login?redirectUrl=${props.history.location.pathname}`)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Form className=\"mb-4\" onSubmit={handleSubmit}>\r\n        <Form.Group controlId=\"commentText\">\r\n          <Form.Label>댓글</Form.Label>\r\n          <Form.Control required as=\"textarea\" rows={4} onClick={handleFocus} />\r\n        </Form.Group>\r\n        <Button variant=\"primary\" type=\"submit\">\r\n          등록\r\n        </Button>\r\n      </Form>\r\n      {\r\n        comments.map((comment: Comment) =>\r\n          <Row className=\"comment\" key={comment.id}>\r\n            <Col xs={12}>\r\n              <div className=\"d-flex justify-content-between\">\r\n                <span className=\"date\">{comment.user?.username}</span>\r\n                <span className=\"date\">{StringUtils.getRecentDate(comment.created)}</span>\r\n              </div>\r\n            </Col>\r\n            <Col xs={12}>{comment.content}</Col>\r\n          </Row>\r\n        )\r\n      }\r\n      <AlertModal show={showModal} header=\"댓글 등록\" body=\"로그인하시겠습니까?\" centered={true}\r\n                  onOk={onOk}\r\n                  onCancel={onCancel}>\r\n      </AlertModal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CommentList;\r\n"]},"metadata":{},"sourceType":"module"}